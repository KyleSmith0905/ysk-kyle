:root {
  --size: 2000px;
  --color-primary: hsl(0, 0%, 100%);
  --color-secondary: hsl(0, 0%, 95%);
  --color-text: hsl(0, 0%, 0%);
  --font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif
}

#ColorTheme {
  background-color: var(--color-secondary);
}

html {
  overflow: hidden;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: var(--font-family);
  width: var(--size);
  height: var(--size);
}

button {
  font-family: var(--font-family)
}

a {
  color: inherit;
  text-decoration: none;
}

h1, h2, h3, h4, h5, h6, p, button, a {
  text-align: center;
  color: var(--color-text);
}

button {
  background-color: transparent;
  border: none;
  cursor: pointer;
}

@keyframes enterStageLeft {
  0% {
    transform: translateX(calc(-1em - 100%));
  }
  100% {
    transform: translateX(0em);
  }
}

@keyframes leaveStageLeft {
  0% {
    transform: translateX(0em);
  }
  100% {
    transform: translateX(calc(-1em - 100%));
  }
}

#HomeButton {
  position: fixed;
  right: 0.9em;
  top: 0.9em;
}

#Settings {
  position: fixed;
  left: 0.9em;
  top: 0.9em;
}

#HomeButton > button,
#Settings > button {
  background-color: var(--color-primary);
  overflow: hidden;
  padding: 1em;
  border: none;
  border-radius: 1em;
  aspect-ratio: 1;
  cursor: pointer;
}

#SettingsList {
  display: flex;
  flex-direction: column;
  transition: visibility ease-in-out 0.5s;
  animation: 500ms ease-in-out 0s 1 enterStageLeft;
  background-color: var(--color-primary);
  padding: 0.6em 1em 0.6em 1em;
  margin-top: 0.9em;
  border-radius: 1em
}

#SettingsList[class*="Hidden"] {
  visibility: hidden;
  animation: 500ms ease-in-out 0s 1 forwards leaveStageLeft;
}

#SettingsList > * {
  padding: 0px;
  margin: 0.4em 0em 0.4em 0em;
  text-align: left;
  font-size: 1.2em;
  line-height: 1em;
}

#Background > * {
  position: absolute;
  width: var(--size);
  height: var(--size);
}

#Background > .fill {
  background-color: var(--color-secondary);
}

#Background > .pattern {
  mask-image: radial-gradient(circle, transparent 15%, hsl(0deg, 0%, 100%, 60%));
}

#Underlay {
  width: var(--size);
	height: var(--size);
  position: relative;
}

#MainContent {
  position: absolute;
  top: 0;
  width: var(--size);
  height: var(--size);
}

.Bubble {
  --cursor-size: 5rem;
  --cursor-blur: 5rem;
  display: flex;
  justify-content: center;
  flex-direction: column;
  position: absolute;
  box-sizing: border-box;
  border-radius: 50%;
  padding: 1em;
  will-change: transform;
  background-color: var(--color-primary);
}

a.Bubble {
  --cursor-color: hsl(240, 100%, 60%);
}

div.Bubble::after {
  box-shadow: 0px 0px 13px -5px hsl(0, 0%, 50%);
}

a.Bubble::after {
  box-shadow: 0px 0px 20px -3px hsl(240, 100%, 60%);
}

.Bubble.ImageBubble::after {
  margin-left: 0em;
}
a.Bubble::after, div.Bubble::after {
  content: '';
  position: absolute;
  margin-left: -1em;
  z-index: -1;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  opacity: 0.4;
  transition: opacity 0.3s ease-in-out;
}

a.Bubble:focus-visible::after, a.Bubble:hover::after, div.Bubble:focus-visible::after, div.Bubble:hover::after {
  opacity: 1;
}

.Bubble > p {
  font-size: 0.9em;
  margin-top: 0em;
}

.Bubble > h2, .Bubble > h1 {
  font-size: 1.3em;
	margin-top: 0.5em;
}

.Bubble img {
  border-radius: 50%;
}

.ImageBubble {
  padding: 0em;
  image-rendering: pixelated;
}

.BubbleSmall {
  font-size: 0.9em;
}

.BubbleLarge { 
  font-size: 1.11em;
}

.Bubble[class*="Hidden"] {
  visibility: hidden;
}

.BackgroundImage {
  filter:
    blur(3px)
    opacity(0.07);
  image-rendering: pixelated;
}
  
.BackgroundImageContainer {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  user-select: none;
}

#EdgeScroller {
	position: fixed;
	left: 0;
	top: 0;
	pointer-events: none;
	transition: opacity ease-in-out 250ms;
}

#EdgeScroller:not(.DisplayVignette) {
	opacity: 0;
}

#ControlStickBase {
  position: fixed;
  background-color: var(--color-primary);
  box-shadow: 0px 0px 13px -8px hsl(0, 0%, 50%);
  border-radius: 50%;
  width: 9em;
  height: 9em;
  left: calc(50% - 4.5em);
  top: calc(85% - 4.5em);
}

#ControlStickHandle {
  position: fixed;
  background-color: var(--color-secondary);
  box-shadow: 0px 0px 13px -5px hsl(0, 0%, 50%);
  border-radius: 50%;
  width: 160px;
  height: 160px;
  left: calc(50% - 80px);
  top: calc(85% - 80px);
  cursor: grab;
  transition: transform ease-in-out 500ms;
}

#ControlStickHandle.GrabbingHandle {
  cursor: grabbing;
  transition: none;
}